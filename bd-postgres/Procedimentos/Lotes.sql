-- Create
CREATE OR REPLACE PROCEDURE sp_Lotes_create(p_ID_PRODUCAO INT4, p_ID_TIPOEQUIP INT4, p_QUANTIDADE_PRODUTOS INT4, p_ID_ARMAZEM INT4, p_ID_FUNCIONARIO INT4)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO LOTES(ID_PRODUCAO, ID_TIPOEQUIP, QUANTIDADE_PRODUTOS, ID_ARMAZEM, ID_FUNCIONARIO)
    VALUES (p_ID_PRODUCAO, p_ID_TIPOEQUIP, p_QUANTIDADE_PRODUTOS, p_ID_ARMAZEM, p_ID_FUNCIONARIO);
    RAISE NOTICE 'Lote criado';
END;
$$;

-- Read
CREATE OR REPLACE PROCEDURE sp_Lotes_read(p_ID_LOTE INT4)
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN QUERY SELECT ID_PRODUCAO, ID_TIPOEQUIP, QUANTIDADE_PRODUTOS, ID_ARMAZEM, ID_FUNCIONARIO
    FROM LOTES
    WHERE ID_LOTE = p_ID_LOTE;
END;
$$;

-- Update
CREATE OR REPLACE PROCEDURE sp_Lotes_update(p_ID_LOTE INT4, p_ID_PRODUCAO INT4, p_ID_TIPOEQUIP INT4, p_QUANTIDADE_PRODUTOS INT4, p_ID_ARMAZEM INT4, p_ID_FUNCIONARIO INT4)
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE LOTES
    SET ID_PRODUCAO = p_ID_PRODUCAO, ID_TIPOEQUIP = p_ID_TIPOEQUIP, QUANTIDADE_PRODUTOS = p_QUANTIDADE_PRODUTOS, ID_ARMAZEM = p_ID_ARMAZEM, ID_FUNCIONARIO = p_ID_FUNCIONARIO
    WHERE ID_LOTE = p_ID_LOTE;
    RAISE NOTICE 'Lote atualizado';
END;
$$;

-- Delete
CREATE OR REPLACE PROCEDURE sp_Lotes_delete(p_ID_LOTE INT4)
LANGUAGE plpgsql
AS $$
BEGIN
    DELETE FROM LOTES
    WHERE ID_LOTE = p_ID_LOTE;
    RAISE NOTICE 'Lote eliminado';
END;
$$;

